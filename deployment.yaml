---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jaeger-selector
  template:
    metadata:
      labels:
        component: jaeger-selector
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one
          ports:
            - containerPort: 5775 
              protocol: UDP 
            - containerPort: 6831 
              protocol: UDP 
            - containerPort: 6832 
              protocol: UDP 
            - containerPort: 5778 
              protocol: TCP 
            - containerPort: 14268 
              protocol: TCP 
            - containerPort: 9411 
              protocol: TCP 
---
apiVersion: v1
kind: Service
metadata:
   name: jaeger-cluster-ip-service
spec:
   type: ClusterIP
   selector:
      component: jaeger-selector
   ports:
   -  port: 14268
      targetPort: 14268
   -  port: 6831
      targetPort: 6831      
      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
   name: database-persistent-volume-claim
spec:
   accessModes:
   - ReadWriteOnce
   resources:
      requests:
         storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mysql-selector
  template:
    metadata:
      labels:
        component: mysql-selector
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_DATABASE
              value: ordersDB
            - name: MYSQL_USER
              value: myuser             
            - name: MYSQL_PASSWORD
              value: mypass             
            - name: MYSQL_ROOT_PASSWORD
              value: myrootpass    
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
   name: mysql-cluster-ip-service
spec:
   type: ClusterIP
   selector:
      component: mysql-selector
   ports:
   -  port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: user-service-selector
  name: user-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: user-service-selector
  template:
    metadata:
      labels:
        component: user-service-selector
    spec:
      containers:
      - image: deepakjain01/user-service
        name: user-service
        env:
          - name: RDS_HOST
            value: mysql-cluster-ip-service
          - name: JAEGER_QUERY_API_URL
            value: http://jaeger-cluster-ip-service
          - name: JAEGER_COLLECTOR_API_URL
            value: http://jaeger-cluster-ip-service                
---
apiVersion: v1
kind: Service
metadata:
  name: user-cluster-ip-service
spec:
  selector:
    component: user-service-selector
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: orders-service-selector
  name: orders-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: orders-service-selector
  template:
    metadata:
      labels:
        component: orders-service-selector
    spec:
      containers:
      - image: deepakjain01/orders-service
        name: orders-service
        env:
          - name: JAEGER_QUERY_API_URL
            value: http://jaeger-cluster-ip-service
          - name: JAEGER_COLLECTOR_API_URL
            value: http://jaeger-cluster-ip-service                  
---
apiVersion: v1
kind: Service
metadata:
  name: orders-cluster-ip-service
spec:
  selector:
    component: orders-service-selector
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: aggregator-service-selector
  name: aggregator-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: aggregator-service-selector
  template:
    metadata:
      labels:
        component: aggregator-service-selector
    spec:
      containers:
      - image: deepakjain01/aggregator-service
        name: aggregator-service
        env:
          - name: USER_SERVICE_URI
            value: http://user-cluster-ip-service:8081  
          - name: ORDERS_SERVICE_URI
            value: http://orders-cluster-ip-service:8082     
          - name: JAEGER_QUERY_API_URL
            value: http://jaeger-cluster-ip-service
          - name: JAEGER_COLLECTOR_API_URL
            value: http://jaeger-cluster-ip-service            
---
apiVersion: v1
kind: Service
metadata:
  name: aggregator-cluster-ip-service
spec:
  selector:
    component: aggregator-service-selector
  type: ClusterIP
  ports:
  - port: 8080 
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: aggregator-cluster-ip-service
              servicePort: 8080
          - path: /api/traces
            backend:
              serviceName: jaeger-cluster-ip-service
              servicePort: 14268              
      


